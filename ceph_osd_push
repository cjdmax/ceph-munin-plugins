#!/usr/bin/python
import sys
import os
sys.path.append(os.path.dirname(os.path.realpath(__file__))+"/munin-1.4-py2-none-any.whl")
import munin
from subprocess import Popen, PIPE
import json
import re

class CephOSD(munin.MuninPlugin):
    title = "OSD Pull Bytes"
    args = "--base 1024"
    category = "Ceph"

    @property
    def fields(self):
        f = [
            ("push_in_bytes", dict(label="push in bytes",
                      info="Push In Bytes",
                      type="COUNTER",
                      min="0")),
            ("push_out_bytes", dict(label="push out bytes",
                      info="Push Out Bytes",
                      type="COUNTER",
                      min="0")),
            # ("", dict(label="",
            #           info="s",
            #           type="GAUGE",
            #           min="0")),
            ]
        return f

    def execute(self):
        if "cephosdasok" not in os.environ:
            return
        plugin_name = list(os.path.split(sys.argv[0]))[1]
        m = re.search("ceph_osd_(\d+)_.*", plugin_name )
        osdnumber = m.group(1)
        socketfile = os.environ["cephosdasok"]+osdnumber+".asok"

        cmd = "ceph --admin-daemon " + socketfile + " perfcounters_dump"
        output = Popen(cmd.split(), stdout=PIPE).communicate()[0]
        obj = json.loads(output)
        osd = obj["osd"]

        res = {}
        def doit(n):
            res[n] = osd[n]
        for field, _ in self.fields:
            doit(field)

        return res

if __name__ == "__main__":
    CephOSD().run()
